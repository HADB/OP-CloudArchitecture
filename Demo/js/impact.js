// Generated by CoffeeScript 1.7.1
var impact;

impact = {};

impact.comIsOverLayer = function(obj, flag, inner) {
  var _dashRect, _flag, _i, _len, _over, _pos, _ref, _selfObj, _size, _tempLayer, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _size = {};
    if (inner) {
      if (inner === 1) {
        _pos.x += 26;
        _pos.y += 21;
        _size = {
          width: 49,
          height: 59
        };
      } else {
        _pos.x += 19;
        _pos.y += 12;
        _size = {
          width: 62,
          height: 76
        };
      }
    }
    _selfObj = $.extend({}, obj, _size, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.layers;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempLayer = _ref[_i];
    _tempObj = {};
    _dashRect = _tempLayer.getDashRect();
    _tempSize = _tempLayer.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_dashRect);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if ((_tempObj.x + _tempObj.width > _selfObj.x + _selfObj.width) && (_selfObj.x > _tempObj.x) && (_tempObj.y + _tempObj.height > _selfObj.y + _selfObj.height) && (_selfObj.y > _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempLayer
      };
    }
  }
  return _over;
};

impact.comIsOverBorder = function(obj, flag) {
  var _dashRect, _flag, _i, _len, _over, _pos, _ref, _selfObj, _size, _tempLayer, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.layers;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempLayer = _ref[_i];
    _tempObj = {};
    _dashRect = _tempLayer.getDashRect();
    _tempSize = _tempLayer.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_dashRect);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x + _selfObj.width < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y + _selfObj.height < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempLayer
      };
    }
  }
  return _over;
};

impact.comIsOverCom = function(obj, flag) {
  var _flag, _i, _len, _over, _pos, _ref, _selfObj, _size, _tempCom, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.components;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempCom = _ref[_i];
    _tempObj = {};
    _tempSize = _tempCom.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_tempCom);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_over.isOver) {
      break;
    }
    if (_selfObj.tname === _tempCom.tname) {
      continue;
    }
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x + _selfObj.width < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y + _selfObj.height < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempCom
      };
    }
  }
  return _over;
};

impact.comIsOverInnerCom = function(obj, flag, exclude) {
  var _defSize, _flag, _i, _len, _over, _pos, _ref, _selfObj, _tempCom, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  _defSize = {
    width: 60,
    height: 60
  };
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _selfObj = $.extend({}, _defSize, _pos);
    _selfObj.tname = obj.tname;
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.components;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempCom = _ref[_i];
    _tempObj = {};
    _tempSize = _defSize;
    _tempPos = tools.convertAbsToRelPos(_tempCom);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_over.isOver) {
      break;
    }
    if (_selfObj.tname === _tempCom.tname) {
      continue;
    }
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x + _selfObj.width < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y + _selfObj.height < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempCom
      };
    }
  }
  return _over;
};

impact.layerIsOverLayer = function(obj, flag) {
  var _dashRect, _flag, _i, _len, _over, _pos, _ref, _selfObj, _size, _tempLayer, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
    _selfObj.tname = obj.tname;
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.layers;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempLayer = _ref[_i];
    _tempObj = {};
    _dashRect = _tempLayer.getDashRect();
    _tempSize = _tempLayer.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_dashRect);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_over.isOver) {
      break;
    }
    if (_selfObj.tname === _tempLayer.tname) {
      continue;
    }
    if (!(_tempObj.x + _tempObj.width + def.layer.outerOffset < _selfObj.x) && !(_selfObj.x + _selfObj.width < _tempObj.x - def.layer.outerOffset) && !(_tempObj.y + _tempObj.height + def.layer.outerOffset < _selfObj.y) && !(_selfObj.y + _selfObj.height < _tempObj.y - def.layer.outerOffset)) {
      _over = {
        isOver: true,
        overObj: _tempLayer
      };
    }
  }
  return _over;
};

impact.layerIsOverCom = function(obj, flag) {
  var _flag, _i, _len, _over, _parentType, _pos, _ref, _selfObj, _size, _tempCom, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
    _selfObj.tname = obj.tname;
  }
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.components;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempCom = _ref[_i];
    _tempObj = {};
    _tempSize = _tempCom.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_tempCom);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    _parentType = _tempCom.getParent().nodeType;
    if (_over.isOver) {
      break;
    }
    if (_selfObj.tname === _tempCom.tname) {
      continue;
    }
    if (_parentType === 'Group') {
      continue;
    }
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x + _selfObj.width < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y + _selfObj.height < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempCom
      };
    }
  }
  return _over;
};

impact.pointIsOverObj = function(obj) {
  var _dashRect, _i, _j, _len, _len1, _over, _ref, _ref1, _selfObj, _tempCom, _tempLayer, _tempObj, _tempPos, _tempSize;
  _selfObj = tools.convertAbsToRelPos(obj, 1);
  _over = {
    isOver: false,
    overObj: null
  };
  _ref = entities.components;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempCom = _ref[_i];
    _tempObj = {};
    _tempSize = _tempCom.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_tempCom);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_over.isOver) {
      break;
    }
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempCom
      };
    }
  }
  _ref1 = entities.layers;
  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
    _tempLayer = _ref1[_j];
    _tempObj = {};
    _dashRect = _tempLayer.getDashRect();
    _tempSize = _tempLayer.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_dashRect);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_over.isOver) {
      break;
    }
    if (!(_tempObj.x + _tempObj.width < _selfObj.x) && !(_selfObj.x < _tempObj.x) && !(_tempObj.y + _tempObj.height < _selfObj.y) && !(_selfObj.y < _tempObj.y)) {
      _over = {
        isOver: true,
        overObj: _tempLayer
      };
    }
  }
  return _over;
};

impact.comIsAlignment = function(obj, flag) {
  var _align, _flag, _i, _len, _pos, _ref, _selfObj, _size, _tempCom, _tempObj, _tempPos, _tempSize;
  _flag = flag || 0;
  if (flag) {
    _pos = tools.convertAbsToRelPos(obj, _flag);
    _selfObj = $.extend({}, obj, _pos);
  } else {
    _pos = tools.convertAbsToRelPos(obj);
    _size = obj.getRealSize();
    _selfObj = $.extend({}, _size, _pos);
    _selfObj.tname = obj.tname;
  }
  _align = {
    alignX: 0,
    alignY: 0
  };
  _ref = entities.components;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    _tempCom = _ref[_i];
    _tempObj = {};
    _tempSize = _tempCom.getRealSize();
    _tempPos = tools.convertAbsToRelPos(_tempCom);
    _tempObj = $.extend({}, _tempSize, _tempPos);
    if (_align.alignX && _align.alignY) {
      break;
    }
    if (_selfObj.tname === _tempCom.tname) {
      continue;
    }
    if (!_align.alignX && tools.dValue(_tempObj.x + _tempObj.width / 2, _selfObj.x + _selfObj.width / 2) < def.guideDeviation) {
      _align.alignX = _tempObj.x + _tempObj.width / 2;
    }
    if (!_align.alignY && tools.dValue(_tempObj.y + _tempObj.height / 2, _selfObj.y + _selfObj.height / 2) < def.guideDeviation) {
      _align.alignY = _tempObj.y + _tempObj.height / 2;
    }
    if (!_align.alignY && tools.dValue(_tempObj.y, _selfObj.y) < def.guideDeviation) {
      _align.alignY = _tempObj.y;
    }
    if (!_align.alignY && tools.dValue(_tempObj.y + _tempObj.height, _selfObj.y) < def.guideDeviation) {
      _align.alignY = _tempObj.y + _tempObj.height;
    }
    if (!_align.alignY && tools.dValue(_tempObj.y, _selfObj.y + _selfObj.height) < def.guideDeviation) {
      _align.alignY = _tempObj.y;
    }
  }
  return _align;
};
